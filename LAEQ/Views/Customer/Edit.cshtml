@using LAEQ.ViewModel
@model ViewCustomer
@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <br />
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <h4 class="marginleft">Edit Customer</h4>
                <hr />
                <div class="panel-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                            @Html.HiddenFor(model=>model.Id)
                            <div class="form-group">
                                @Html.LabelFor(model => model.Type, "Type", htmlAttributes: new { @class = "control-label col-md-2 " })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.Type,
                                new List<SelectListItem> {
                                new SelectListItem { Value = "" , Text = "Select Customer Type" },
                                new SelectListItem { Value = "Company" , Text = "Company" },
                                new SelectListItem { Value = "Individual" , Text = "Individual" },
                                },
                                new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Name, new { @class = "form-control", @placeholder = "Customer Name" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address1,"Address 1", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Address1, new { @class = "form-control", @placeholder = "Address 1" })
                                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group text-left">
                                @Html.LabelFor(model => model.Address2, "Address 2", htmlAttributes: new { @class = "control-label text-left col-md-2" })
                                <div class="col-md-10">
                                    @Html.TextAreaFor(model => model.Address2, new { @class = "form-control", @placeholder = "Address 2" })
                                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Website, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Website, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex: www.escurity.com" } })
                                    @Html.ValidationMessageFor(model => model.Website, "", new { @class = "text-danger" })
                                </div>
                            </div>
                     
                      
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save" class="btn background-docker" />
                                    <input type="button" value="Back to Details" class="btn background-docker" onclick="window.location.href='@Url.Action("Details","Customer" , new { id = Model.Id })'" />
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
   
}
