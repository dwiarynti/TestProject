@using LAEQ.ViewModel
@model ViewCustomerContact
@{
    ViewBag.Title = "CreateContact";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <br />
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <h4 class="marginleft">Create Contact</h4>
                <hr />
                <div class="panel-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Name,Model.Type, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    <p class="form-control-static">@Model.Name</p>
                                </div>
                                @Html.HiddenFor(model=>model.CustomerId)
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control inputtext", @placeholder = "Ex. Mr" } })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ContactName, "Contact Name", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.ContactName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Contact Name" } })
                                    @Html.ValidationMessageFor(model => model.ContactName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.JobPosition, "Job Position", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.JobPosition, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ex. Director" } })
                                    @Html.ValidationMessageFor(model => model.JobPosition, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone Number" } })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", @placeholder = "Mobile Number" } })
                                    @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = "Email Address" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label text-left col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Notes, new { @class = "form-control", @placeholder = "Notes" })
                                    @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-10">
                                    <input type="submit" value="Create" class="btn background-docker" />
                                    <input type="button" value="Back to Details" class="btn background-docker" onclick="window.location.href='@Url.Action("Details","Customer" , new { id = Model.CustomerId })'" />
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
}

