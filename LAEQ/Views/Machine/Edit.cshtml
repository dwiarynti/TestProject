
@{
    ViewBag.Title = "Edit";
}

@using LAEQ.ViewModel
@model ViewMachine
@{
    ViewBag.Title = "Edit";
}
<script>
    $(document).ready(function()
    {
        $("#CalibrationDate").datepicker();
        $("#PMDate").datepicker();

        var navListItems = $('ul.setup-panel li a'),
           allWells = $('.setup-content');

        allWells.hide();

        navListItems.click(function (e) {
            e.preventDefault();
            var $target = $($(this).attr('href')),
                $item = $(this).closest('li');

            if (!$item.hasClass('disabled')) {
                navListItems.closest('li').removeClass('active');
                $item.addClass('active');
                allWells.hide();
                $target.show();
            }
        });

        $('ul.setup-panel li.active a').trigger('click');


        $('#activate-step-2').on('click', function (e) {
            $('ul.setup-panel li:eq(1)').removeClass('disabled');
            $('ul.setup-panel li a[href="#step-2"]').trigger('click');
            $(this).remove();
        })
    })
</script>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <br />
    <div class="form-horizontal">
        <div class="panel-group">
            <div class="panel panel-default">
                <h4 class="marginleft">Edit Machine</h4>
              
                <hr style="margin-bottom:0;" />
                <div class="panel-body">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row form-group">
                        <div class="col-xs-12">
                            <ul class="nav nav-pills nav-justified thumbnail setup-panel">
                                <li class="active">
                                    <a href="#step-1" class="stepwizard-step">
                                        <h4 class="list-group-item-heading">Machine</h4>
                                        <p class="list-group-item-text"></p>
                                    </a>

                                </li>
                                <li class="disabled">
                                    <a href="#step-2" class="stepwizard-step">
                                        <h4 class="list-group-item-heading"> Detail</h4>
                                        <p class="list-group-item-text"></p>
                                    </a>
                                </li>


                            </ul>
                        </div>
                    </div>

                    <div class="panel-body row setup-content" id="step-1" style="margin-left:10px;">
                        <div class="col-xs-6">
                            @Html.HiddenFor(model=>model.Id)
                            <div class="form-group">
                                @Html.LabelFor(model => model.MachineID, "Machine ID", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.MachineID, new { htmlAttributes = new { @class = "form-control", @placeholder = " Machine ID" } })
                                    @Html.ValidationMessageFor(model => model.MachineID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SerialNumber, "Serial Number", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.SerialNumber, new { htmlAttributes = new { @class = "form-control", @placeholder = "Serial Number Machine" } })
                                    @Html.ValidationMessageFor(model => model.SerialNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control", @placeholder = "Brand Machine" } })
                                    @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @placeholder = "Brand Machine" } })
                                    @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control", @placeholder = "Year Machine" } })
                                    @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-9">
                                    <input type="button" value="Back to Details" class="btn background-docker" onclick="window.location.href='@Url.Action("Details","Machine" , new { id = Model.Id })'" />
                                    <input type="button" id="activate-step-2" value="Next" class="btn background-docker" />

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="panel-body row setup-content" id="step-2" style="margin-left:10px;">
                        <div class="col-xs-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control", @placeholder = "Capacity Machine" } })
                                    @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Calibration, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.Calibration,
                                new List<SelectListItem> {
                                new SelectListItem { Value = "" , Text = "Select Calibaration Type" },
                                new SelectListItem { Value = "None" , Text = "None" },
                                new SelectListItem { Value = "Internal" , Text = "Internal" },
                                 new SelectListItem { Value = "External" , Text = "External" },
                                },
                                new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Calibration, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.CalibrationDate, "Calibration Date", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.CalibrationDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Calibration Date Machine", @Value = Model.CalibrationDate.ToShortDateString() } })
                                    @Html.ValidationMessageFor(model => model.CalibrationDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PM, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.DropDownListFor(model => model.PM,
                                new List<SelectListItem> {
                                new SelectListItem { Value = "" , Text = "Select PM" },
                                new SelectListItem { Value = "Yes" , Text = "Yes" },
                                new SelectListItem { Value = "No" , Text = "No" },
                                },
                                new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Calibration, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PMDate, "PMDate", htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.PMDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "", @Value = Model.PMDate.ToShortDateString() } })
                                    @Html.ValidationMessageFor(model => model.PMDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.TextAreaFor(model => model.Remark, new { @class = "form-control", @placeholder = "Remark" })
                                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-offset-3 col-md-10">
                                    <input type="submit" value="Save" class="btn background-docker" />
                                    <input type="button" value="Back to Details" class="btn background-docker" onclick="window.location.href='@Url.Action("Details","Machine" , new { id = Model.Id })'" />
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>


    </div>
}

